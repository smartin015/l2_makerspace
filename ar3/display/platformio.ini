; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = esp32dev

; Shared options
[env]
build_flags =
  -D LV_CONF_INCLUDE_SIMPLE
; -I src Required to find lv_conf.h
  -I src
lib_deps =
  lvgl@^7.8.1
lib_archive = false


[env:native]
platform = native@^1.1.3
extra_scripts = support/sdl2_build_extra.py
build_flags =
  ${env.build_flags}
  ; Use 32-bits build when possible, for correct memory stat display. You need
  ; `:i386` sdl2 libs installed. Comment this option for 64-bits build.
  ; !python -c "import platform; print('-m32' if platform.system() in [ 'Linux' ] else '')"
  ; Add recursive dirs for hal headers search
  !python3 -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/sdl2')]))"
  -lSDL2
  ; SDL drivers options
  -D LV_LVGL_H_INCLUDE_SIMPLE
  -D LV_DRV_NO_CONF
  -D USE_MONITOR
  -D MONITOR_ZOOM=2
  -D USE_MOUSE
  -D USE_MOUSEWHEEL
  -D USE_KEYBOARD
lib_deps =
  ${env.lib_deps}
  ;lv_drivers@~6.0.2
  lv_drivers=https://github.com/littlevgl/lv_drivers/archive/7d71907c1d6b02797d066f50984b866e080ebeed.zip
src_filter =
  +<*>
  +<../hal/sdl2>


[env:esp32dev]
platform = espressif32@1.7.0
board = esp32dev
framework = arduino
monitor_speed = 115200
upload_speed = 921600
build_flags = 
  -Os
  -DCORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_DEBUG
  -DUSER_SETUP_LOADED=1
  -DST7789_DRIVER=1
  -DTFT_WIDTH=135
  -DTFT_HEIGHT=240
  -DCGRAM_OFFSET=1
  -DTFT_MISO=-1
  -DTFT_MOSI=19
  -DTFT_SCLK=18
  -DTFT_CS=5
  -DTFT_DC=16
  -DTFT_RST=23
  -DTFT_BL=4
  -DTFT_BACKLIGHT_ON=1
  -DLOAD_GLCD=1
  -DLOAD_FONT2=1
  -DLOAD_FONT4=1
  -DLOAD_FONT6=1
  -DLOAD_FONT7=1
  -DLOAD_FONT8=1
  -DLOAD_GFXFF=1
  -DSMOOTH_FONT=1
  -DSPI_FREQUENCY=40000000
  -DSPI_READ_FREQUENCY=6000000
  ${env.build_flags}
  ; Add recursive dirs for hal headers search
  !python3 -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/esp32')]))"
lib_deps =
  ${env.lib_deps}
  bodmer/TFT_eSPI@^2.3.54
src_filter =
  +<*>
  +<../hal/esp32>
